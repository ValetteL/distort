/*!
 ______  _____ _______ _______  _____   ______ _______
 |     \   |   |______    |    |     | |_____/    |   
 |_____/ __|__ ______|    |    |_____| |    \_    |   
                                                      
 distort 1.0.0-alpha <http://isuttell.github.io/distort/>
 Contributor(s): Isaac Suttell <isaac@isaacsuttell.com>
 Last Build: 2014-11-21
*/
!function(a,b){"use strict";"function"==typeof define&&"object"==typeof define.amd?define([],function(){return b(a)}):a.Distort=b(a)}(this,function(){"use strict";function Distort(a){a=a||{},this.width=a.width,this.height=a.height,a.$el&&a.$el instanceof window.$&&(this.width=a.$el.width(),this.height=a.$el.height()),a.offset=a.offset||{},this.updateOffset(a.offset||{}),this.topLeft={x:0,y:0},this.topRight={x:this.width,y:0},this.bottomLeft={x:0,y:this.height},this.bottomRight={x:this.width,y:this.height},this.dpr=window.devicePixelRatio||!1,this.style=this.calculate()}function a(a){for(var b=-1;++b<16;)a[b]=parseFloat(a[b]);return a}function b(a){var b;return b="matrix3d(",b+=a.join(", "),b+=")"}function c(a,b,c){return a.x*b.y+b.x*c.y+c.x*a.y-a.y*b.x-b.y*c.x-c.y*a.x}var d="matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)";return Distort.prototype.matrix=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],Distort.prototype.updateOffset=function(a){return a.x=a.x||"",a.y=a.y||"",a.x=a.x.indexOf("%")>-1?-parseFloat(a.x)*this.width/100:a.x.indexOf("px")>-1?-parseFloat(a.x):this.width*-.5,a.y=a.y.indexOf("%")>-1?-parseFloat(a.y)*this.height/100:a.y.indexOf("px")>-1?-parseFloat(a.y):this.height*-.5,this.offset=a,a},Distort.prototype.isValid=!1,Distort.prototype.offset={x:0,y:0},Distort.prototype.topLeft={x:0,y:0},Distort.prototype.topRight={x:0,y:0},Distort.prototype.bottomLeft={x:0,y:0},Distort.prototype.bottomRight={x:0,y:0},Distort.prototype.calculate=function(){var c,e,f,g,h,i,j,k,l=[[0,0,1,0,0,0,0,0],[0,0,1,0,0,0,0,0],[0,0,1,0,0,0,0,0],[0,0,1,0,0,0,0,0],[0,0,0,0,0,1,0,0],[0,0,0,0,0,1,0,0],[0,0,0,0,0,1,0,0],[0,0,0,0,0,1,0,0]],m=[0,0,0,0,0,0,0,0],n=[],o=[this.topLeft,this.topRight,this.bottomLeft,this.bottomRight],p=[0,1,2,3,4,5,6,7];for(g=0;4>g;g++)l[g][0]=l[g+4][3]=1&g?this.width+this.offset.x:this.offset.x,l[g][1]=l[g+4][4]=g>1?this.height+this.offset.y:this.offset.y,l[g][6]=(1&g?-this.offset.x-this.width:-this.offset.x)*(o[g].x+this.offset.x),l[g][7]=(g>1?-this.offset.y-this.height:-this.offset.y)*(o[g].x+this.offset.x),l[g+4][6]=(1&g?-this.offset.x-this.width:-this.offset.x)*(o[g].y+this.offset.y),l[g+4][7]=(g>1?-this.offset.y-this.height:-this.offset.y)*(o[g].y+this.offset.y),m[g]=o[g].x+this.offset.x,m[g+4]=o[g].y+this.offset.y,l[g][2]=l[g+4][5]=1,l[g][3]=l[g][4]=l[g][5]=l[g+4][0]=l[g+4][1]=l[g+4][2]=0;for(h=0;8>h;h++){for(g=0;8>g;g++)n[g]=l[g][h];for(g=0;8>g;g++){for(f=l[g],c=h>g?g:h,e=0,i=0;c>i;i++)e+=f[i]*n[i];f[h]=n[g]-=e}for(j=h,g=h+1;8>g;g++)Math.abs(n[g])>Math.abs(n[j])&&(j=g);if(j!==h){for(i=0;8>i;i++)k=l[j][i],l[j][i]=l[h][i],l[h][i]=k;k=p[j],p[j]=p[h],p[h]=k}if(0!==l[h][h])for(g=h+1;8>g;g++)l[g][h]/=l[h][h]}for(g=0;8>g;g++)p[g]=m[p[g]];for(i=0;8>i;i++)for(g=i+1;8>g;g++)p[g]-=p[i]*l[g][i];for(i=7;i>-1;i--)for(p[i]/=l[i][i],g=0;i>g;g++)p[g]-=p[i]*l[g][i];return this.hasErrors()?(this.isValid=!1,this.style=d,this.style):(this.isValid=!0,this.matrix[0]=p[0].toFixed(9),this.matrix[1]=p[3].toFixed(9),this.matrix[2]=0,this.matrix[3]=p[6].toFixed(9),this.matrix[4]=p[1].toFixed(9),this.matrix[5]=p[4].toFixed(9),this.matrix[6]=0,this.matrix[7]=p[7].toFixed(9),this.matrix[8]=0,this.matrix[9]=0,this.matrix[10]=1,this.matrix[11]=0,this.matrix[12]=p[2].toFixed(9),this.matrix[13]=p[5].toFixed(9),this.matrix[14]=0,this.matrix[15]=1,this.matrix=a.call(this,this.matrix),this.style=b.call(this,this.matrix),this.dprFix&&(this.style+=" scale("+this.dpr+", "+this.dpr+") ",this.style+="perspective(1000px) ",this.style+="translateZ("+1e3*(1-this.dpr)+"px)"),this.style)},Distort.prototype.hasDistancesError=function(){var a,b;return a=this.topLeft.x-this.topRight.x,b=this.topLeft.y-this.topRight.y,Math.sqrt(a*a+b*b)<=1?!0:(a=this.bottomLeft.x-this.bottomRight.x,b=this.bottomLeft.y-this.bottomRight.y,Math.sqrt(a*a+b*b)<=1?!0:(a=this.topLeft.x-this.bottomLeft.x,b=this.topLeft.y-this.bottomLeft.y,Math.sqrt(a*a+b*b)<=1?!0:(a=this.topRight.x-this.bottomRight.x,b=this.topRight.y-this.bottomRight.y,Math.sqrt(a*a+b*b)<=1?!0:(a=this.topLeft.x-this.bottomRight.x,b=this.topLeft.y-this.bottomRight.y,Math.sqrt(a*a+b*b)<=1?!0:(a=this.topRight.x-this.bottomLeft.x,b=this.topRight.y-this.bottomLeft.y,Math.sqrt(a*a+b*b)<=1?!0:!1)))))},Distort.prototype.hasPolygonError=function(){var a,b;return a=c(this.topLeft,this.topRight,this.bottomRight),b=c(this.bottomRight,this.bottomLeft,this.topLeft),0>=a||0>=b?!0:(a=c(this.topRight,this.bottomRight,this.bottomLeft),b=c(this.bottomLeft,this.topLeft,this.topRight),0>=a||0>=b?!0:!1)},Distort.prototype.hasErrors=function(){return this.hasDistancesError()?1:this.hasPolygonError()?2:0},Distort.prototype.update=function(){return this.calculate()},Distort.prototype.toString=Distort.prototype.update,Distort.prototype.equals=function(a){return this.toString()===a.toString()},Distort.prototype.clone=function(){var a=new Distort({width:this.width,height:this.height,$el:this.$el});for(var b in this)this.hasOwnProperty[b]&&(a[b]=this[b]);return a},Distort});